{
    "boost.color.any": "any color",
    "boost.color.black": "black",
    "boost.color.blue": "blue",
    "boost.color.green": "green",
    "boost.color.red": "red",
    "boost.color.white": "white",
    "boost.color.yellow": "yellow",
    "boost.getMotorPosition": "motor [MOTOR_REPORTER_ID] position",
    "boost.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "boost.motorDirection.backward": "that way",
    "boost.motorDirection.forward": "this way",
    "boost.motorDirection.reverse": "reverse",
    "boost.motorOff": "turn motor [MOTOR_ID] off",
    "boost.motorOn": "turn motor [MOTOR_ID] on",
    "boost.motorOnFor": "turn motor [MOTOR_ID] for [DURATION] seconds",
    "boost.motorOnForRotation": "turn motor [MOTOR_ID] for [ROTATION] rotations",
    "boost.seeingColor": "seeing [COLOR] brick?",
    "boost.setLightHue": "set light color to [HUE]",
    "boost.setMotorDirection": "set motor [MOTOR_ID] direction [MOTOR_DIRECTION]",
    "boost.setMotorPower": "set motor [MOTOR_ID] speed to [POWER] %",
    "boost.tiltDirection.any": "any",
    "boost.tiltDirection.down": "down",
    "boost.tiltDirection.left": "left",
    "boost.tiltDirection.right": "right",
    "boost.tiltDirection.up": "up",
    "boost.whenColor": "when [COLOR] brick seen",
    "boost.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "ev3.beepNote": "beep note [NOTE] for [TIME] secs",
    "ev3.buttonPressed": "button [PORT] pressed?",
    "ev3.getBrightness": "brightness",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "motor [PORT] position",
    "ev3.motorSetPower": "motor [PORT] set power [POWER] %",
    "ev3.motorTurnClockwise": "motor [PORT] turn this way for [TIME] seconds",
    "ev3.motorTurnCounterClockwise": "motor [PORT] turn that way for [TIME] seconds",
    "ev3.whenBrightnessLessThan": "when brightness < [DISTANCE]",
    "ev3.whenButtonPressed": "when button [PORT] pressed",
    "ev3.whenDistanceLessThan": "when distance < [DISTANCE]",
    "gdxfor.getAcceleration": "acceleration [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "spin speed [DIRECTION]",
    "gdxfor.getTilt": "tilt angle [TILT]",
    "gdxfor.isFreeFalling": "falling?",
    "gdxfor.isTilted": "tilted [TILT]?",
    "gdxfor.pulled": "pulled",
    "gdxfor.pushed": "pushed",
    "gdxfor.shaken": "shaken",
    "gdxfor.startedFalling": "started falling",
    "gdxfor.tiltDirectionMenu.any": "any",
    "gdxfor.tiltDirectionMenu.back": "back",
    "gdxfor.tiltDirectionMenu.front": "front",
    "gdxfor.tiltDirectionMenu.left": "left",
    "gdxfor.tiltDirectionMenu.right": "right",
    "gdxfor.turnedFaceDown": "turned face down",
    "gdxfor.turnedFaceUp": "turned face up",
    "gdxfor.whenForcePushedOrPulled": "when force sensor [PUSH_PULL]",
    "gdxfor.whenGesture": "when [GESTURE]",
    "gdxfor.whenTilted": "when tilted [TILT]",
    "makeymakey.downArrow": "down arrow",
    "makeymakey.downArrowShort": "down",
    "makeymakey.leftArrow": "left arrow",
    "makeymakey.leftArrowShort": "left",
    "makeymakey.rightArrow": "right arrow",
    "makeymakey.rightArrowShort": "right",
    "makeymakey.spaceKey": "space",
    "makeymakey.upArrow": "up arrow",
    "makeymakey.upArrowShort": "up",
    "makeymakey.whenKeyPressed": "when [KEY] key pressed",
    "makeymakey.whenKeysPressedInOrder": "when [SEQUENCE] pressed in order",
    "microbit.buttonsMenu.any": "any",
    "microbit.clearDisplay": "clear display",
    "microbit.defaultTextToDisplay": "Hello!",
    "microbit.displaySymbol": "display [MATRIX]",
    "microbit.displayText": "display text [TEXT]",
    "microbit.gesturesMenu.jumped": "jumped",
    "microbit.gesturesMenu.moved": "moved",
    "microbit.gesturesMenu.shaken": "shaken",
    "microbit.isButtonPressed": "[BTN] button pressed?",
    "microbit.isTilted": "tilted [DIRECTION]?",
    "microbit.pinStateMenu.off": "off",
    "microbit.pinStateMenu.on": "on",
    "microbit.tiltAngle": "tilt angle [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "any",
    "microbit.tiltDirectionMenu.back": "back",
    "microbit.tiltDirectionMenu.front": "front",
    "microbit.tiltDirectionMenu.left": "left",
    "microbit.tiltDirectionMenu.right": "right",
    "microbit.whenButtonPressed": "when [BTN] button pressed",
    "microbit.whenGesture": "when [GESTURE]",
    "microbit.whenPinConnected": "when pin [PIN] connected",
    "microbit.whenTilted": "when tilted [DIRECTION]",
    "music.categoryName": "Music",
    "music.changeTempo": "change tempo by [TEMPO]",
    "music.drumBass": "(2) Bass Drum",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Closed Hi-Hat",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Cowbell",
    "music.drumCrashCymbal": "(4) Crash Cymbal",
    "music.drumCuica": "(18) Cuica",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Hand Clap",
    "music.drumOpenHiHat": "(5) Open Hi-Hat",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Snare Drum",
    "music.drumTambourine": "(7) Tambourine",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood Block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Bass",
    "music.instrumentBassoon": "(14) Bassoon",
    "music.instrumentCello": "(8) Cello",
    "music.instrumentChoir": "(15) Choir",
    "music.instrumentClarinet": "(10) Clarinet",
    "music.instrumentElectricGuitar": "(5) Electric Guitar",
    "music.instrumentElectricPiano": "(2) Electric Piano",
    "music.instrumentFlute": "(12) Flute",
    "music.instrumentGuitar": "(4) Guitar",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Music Box",
    "music.instrumentOrgan": "(3) Organ",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Synth Lead",
    "music.instrumentSynthPad": "(21) Synth Pad",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Wooden Flute",
    "music.midiPlayDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.midiSetInstrument": "set instrument to [INSTRUMENT]",
    "music.playDrumForBeats": "play drum [DRUM] for [BEATS] beats",
    "music.playNoteForBeats": "play note [NOTE] for [BEATS] beats",
    "music.restForBeats": "rest for [BEATS] beats",
    "music.setInstrument": "set instrument to [INSTRUMENT]",
    "music.setTempo": "set tempo to [TEMPO]",
    "pen.categoryName": "Pen",
    "pen.changeColorParam": "change pen [COLOR_PARAM] by [VALUE]",
    "pen.changeHue": "change pen color by [HUE]",
    "pen.changeShade": "change pen shade by [SHADE]",
    "pen.changeSize": "change pen size by [SIZE]",
    "pen.clear": "erase all",
    "pen.colorMenu.brightness": "brightness",
    "pen.colorMenu.color": "color",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparency",
    "pen.penDown": "pen down",
    "pen.penUp": "pen up",
    "pen.setColor": "set pen color to [COLOR]",
    "pen.setColorParam": "set pen [COLOR_PARAM] to [VALUE]",
    "pen.setHue": "set pen color to [HUE]",
    "pen.setShade": "set pen shade to [SHADE]",
    "pen.setSize": "set pen size to [SIZE]",
    "pen.stamp": "stamp",
    "speech.defaultWhenIHearValue": "let''s go",
    "speech.extensionName": "Speech to Text",
    "speech.listenAndWait": "listen and wait",
    "speech.speechReporter": "speech",
    "speech.whenIHear": "when I hear [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Text to Speech",
    "text2speech.defaultTextToSpeak": "hello",
    "text2speech.giant": "giant",
    "text2speech.kitten": "kitten",
    "text2speech.setLanguageBlock": "set language to [LANGUAGE]",
    "text2speech.setVoiceBlock": "set voice to [VOICE]",
    "text2speech.speakAndWaitBlock": "speak [WORDS]",
    "text2speech.squeak": "squeak",
    "text2speech.tenor": "tenor",
    "translate.categoryName": "Translate",
    "translate.defaultTextToTranslate": "hello",
    "translate.translateBlock": "translate [WORDS] to [LANGUAGE]",
    "translate.viewerLanguage": "language",
    "videoSensing.categoryName": "Video Sensing",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "motion",
    "videoSensing.off": "off",
    "videoSensing.on": "on",
    "videoSensing.onFlipped": "on flipped",
    "videoSensing.setVideoTransparency": "set video transparency to [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "stage",
    "videoSensing.videoOn": "video [ATTRIBUTE] on [SUBJECT]",
    "videoSensing.videoToggle": "turn video [VIDEO_STATE]",
    "videoSensing.whenMotionGreaterThan": "when video motion > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "tilt angle [TILT_DIRECTION]",
    "wedo2.isTilted": "tilted [TILT_DIRECTION_ANY]?",
    "wedo2.motorDirection.backward": "that way",
    "wedo2.motorDirection.forward": "this way",
    "wedo2.motorDirection.reverse": "reverse",
    "wedo2.motorId.a": "motor A",
    "wedo2.motorId.all": "all motors",
    "wedo2.motorId.b": "motor B",
    "wedo2.motorId.default": "motor",
    "wedo2.motorOff": "turn [MOTOR_ID] off",
    "wedo2.motorOn": "turn [MOTOR_ID] on",
    "wedo2.motorOnFor": "turn [MOTOR_ID] on for [DURATION] seconds",
    "wedo2.playNoteFor": "play note [NOTE] for [DURATION] seconds",
    "wedo2.setLightHue": "set light color to [HUE]",
    "wedo2.setMotorDirection": "set [MOTOR_ID] direction to [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "set [MOTOR_ID] power to [POWER]",
    "wedo2.tiltDirection.any": "any",
    "wedo2.tiltDirection.down": "down",
    "wedo2.tiltDirection.left": "left",
    "wedo2.tiltDirection.right": "right",
    "wedo2.tiltDirection.up": "up",
    "wedo2.whenDistance": "when distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "when tilted [TILT_DIRECTION_ANY]",
    "matatabot.motionStepMenu.step1": "1 step",
    "matatabot.motionStepMenu.step2": "2 steps",
    "matatabot.motionStepMenu.step3": "3 steps",
    "matatabot.motionStepMenu.step4": "4 steps",
    "matatabot.motionStepMenu.step5": "5 steps",
    "matatabot.motionStepMenu.step6": "6 steps",
    "matatabot.motionStepMenu.rollDice": "roll dice",
    "matatabot.motionAngleMenu.degree30": "30°",
    "matatabot.motionAngleMenu.degree36": "36°",
    "matatabot.motionAngleMenu.degree45": "45°",
    "matatabot.motionAngleMenu.degree60": "60°",
    "matatabot.motionAngleMenu.degree72": "72°",
    "matatabot.motionAngleMenu.degree90": "90°",
    "matatabot.motionAngleMenu.degree108": "108°",
    "matatabot.motionAngleMenu.degree120": "120°",
    "matatabot.motionAngleMenu.degree135": "135°",
    "matatabot.motionAngleMenu.degree144": "144°",
    "matatabot.motionAngleMenu.degree150": "150°",
    "matatabot.motionAngleMenu.degree180": "180°",
    "matatabot.motionTrendMenu.forward": "forward",
    "matatabot.motionTrendMenu.backward": "backward",
    "matatabot.motionGearMenu.gear1": "gear 1",
    "matatabot.motionGearMenu.gear2": "gear 2",
    "matatabot.motionGearMenu.gear3": "gear 3",
    "matatabot.motionGearMenu.gear4": "gear 4",
    "matatabot.motionGearMenu.gear5": "gear 5",
    "matatabot.motionGearMenu.gear6": "gear 6",
    "matatabot.motionGearMenu.stop": "stop",
    "matatabot.motionGearMenu.unchanged": "unchanged",
    "matatabot.motionGearMenu.rollDice": "roll dice",
    "matatabot.motionWheelMenu.left": "left wheel",
    "matatabot.motionWheelMenu.right": "right wheel",
    "matatabot.motionWheelMenu.both": "both wheels",
    "matatabot.danceIndexMenu.num1": "the 1st",
    "matatabot.danceIndexMenu.num2": "the 2nd",
    "matatabot.danceIndexMenu.num3": "the 3rd",
    "matatabot.danceIndexMenu.num4": "the 4th",
    "matatabot.danceIndexMenu.num5": "the 5th",
    "matatabot.danceIndexMenu.num6": "the 6th",
    "matatabot.danceIndexMenu.rollDice": "roll dice",
    "matatabot.actionIndexMenu.num1": "the 1st",
    "matatabot.actionIndexMenu.num2": "the 2nd",
    "matatabot.actionIndexMenu.num3": "the 3rd",
    "matatabot.actionIndexMenu.num4": "the 4th",
    "matatabot.actionIndexMenu.num5": "the 5th",
    "matatabot.actionIndexMenu.num6": "the 6th",
    "matatabot.actionIndexMenu.rollDice": "roll dice",
    "matatabot.soundBeat.oneFourth": "1/4",
    "matatabot.soundBeat.twoFourth": "2/4",
    "matatabot.soundBeat.threeFourth": "3/4",
    "matatabot.soundBeat.fourFourth": "4/4",
    "matatabot.soundBeat.fiveFourth": "5/4",
    "matatabot.soundBeat.sixFourth": "6/4",
    "matatabot.soundBeat.rollDice": "roll dice",
    "matatabot.soundTone.do": "do",
    "matatabot.soundTone.re": "re",
    "matatabot.soundTone.mi": "mi",
    "matatabot.soundTone.fa": "fa",
    "matatabot.soundTone.sol": "sol",
    "matatabot.soundTone.la": "la",
    "matatabot.soundTone.ti": "ti",
    "matatabot.soundMelody.num1": "the 1st",
    "matatabot.soundMelody.num2": "the 2nd",
    "matatabot.soundMelody.num3": "the 3rd",
    "matatabot.soundMelody.num4": "the 4th",
    "matatabot.soundMelody.num5": "the 5th",
    "matatabot.soundMelody.num6": "the 6th",
    "matatabot.soundMelody.num7": "the 7th",
    "matatabot.soundMelody.num8": "the 8th",
    "matatabot.soundMelody.num9": "the 9th",
    "matatabot.soundMelody.num10": "the 10th",
    "matatabot.soundSong.num1": "the 1st",
    "matatabot.soundSong.num2": "the 2nd",
    "matatabot.soundSong.num3": "the 3rd",
    "matatabot.soundSong.num4": "the 4th",
    "matatabot.soundSong.num5": "the 5th",
    "matatabot.soundSong.num6": "the 6th",
    "matatabot.soundSong.rollDice": "roll dice",
    "matatabot.looksSideMenu.left": "left",
    "matatabot.looksSideMenu.right": "right",
    "matatabot.looksSideMenu.all": "all",
    "matatabot.colorTypeMenu.white": "white",
    "matatabot.colorTypeMenu.red": "red",
    "matatabot.colorTypeMenu.yellow": "yellow",
    "matatabot.colorTypeMenu.green": "green",
    "matatabot.colorTypeMenu.blue": "blue",
    "matatabot.colorTypeMenu.purple": "purple",
    "matatabot.colorTypeMenu.black": "black",
    "matatabot.brightnessLevelMenu.lev1": "1",
    "matatabot.brightnessLevelMenu.lev2": "2",
    "matatabot.brightnessLevelMenu.lev3": "3",
    "matatabot.brightnessLevelMenu.lev4": "4",
    "matatabot.brightnessLevelMenu.lev5": "5",
    "matatabot.brightnessLevelMenu.lev6": "6",
    "matatabot.brightnessLevelMenu.rollDice": "roll dice",
    "matatabot.motionForwardStep": "move [STEP] forward",
    "matatabot.motionBackwardStep": "move [STEP] backward",
    "matatabot.motionTurnLeftAngle": "turn [ANGLE] left",
    "matatabot.motionTurnRightAngle": "turn [ANGLE] right",
    "matatabot.motionMoving": "move [POS] cm",
    "matatabot.motionWhirl": "rotate [ANGLE] degrees",
    "matatabot.motionWheelPower": "left wheel [LEFT_DIR] speed [LEFT_GEAR], right wheel [RIGHT_DIR] speed [RIGHT_GEAR]",
    "matatabot.motionWheelSpeed": "set left motor speed [LEFT] cm/s, right motor speed [RIGHT] cm/s",
    "matatabot.motionStopMoving": "[WHEEL] stop moving",
    "matatabot.doDance": "[DANCE_INDEX] dance",
    "matatabot.doAction": "[ACTION_INDEX] action",
    "matatabot.soundAlto": "play alto [TONE] for [BEAT] beats",
    "matatabot.soundTreble": "play treble [TONE] for [BEAT] beats",
    "matatabot.soundMelody": "[MELODY] melody",
    "matatabot.soundSong": "[SONG] song",
    "matatabot.eyeLedSingleSet1": "set [SIDE] eye to [COLOR_TYPE] and brightness is level [BRIGHTNESS_LEVEL]",
    "matatabot.eyeLedSingleSet2": "set [SIDE] eye to [COLOR]",
    "matatabot.eyeLedSingleSet3": "set eye [LED_INDEX] red [RED_VALUE] green [GREEN_VALUE] blue [BLUE_VALUE]",
    "matatabot.eyeLedAllOff": "turn all eyes off",
    "matatacon.lightEffectMenu.spoondrift": "spoondrift",
    "matatacon.lightEffectMenu.meteor": "meteor",
    "matatacon.lightEffectMenu.rainbow": "rainbow",
    "matatacon.lightEffectMenu.firefly": "firefly",
    "matatacon.lightEffectMenu.colorwipe": "colorwipe",
    "matatacon.lightEffectMenu.breathe": "breathe",
    "matatacon.motinStatusMenu.shaken": "shaken",
    "matatacon.motinStatusMenu.up": "up",
    "matatacon.motinStatusMenu.down": "down",
    "matatacon.motinStatusMenu.left": "tilted left",
    "matatacon.motinStatusMenu.right": "tilted right",
    "matatacon.motinStatusMenu.front": "tilted front",
    "matatacon.motinStatusMenu.back": "tilted back",
    "matatacon.motinStatusMenu.freeFall": "free fall",
    "matatacon.colorTypeMenu.white": "white",
    "matatacon.colorTypeMenu.red": "red",
    "matatacon.colorTypeMenu.yellow": "yellow",
    "matatacon.colorTypeMenu.green": "green",
    "matatacon.colorTypeMenu.blue": "blue",
    "matatacon.colorTypeMenu.purple": "purple",
    "matatacon.colorTypeMenu.black": "black",
    "matatacon.buttonKeyMenu.play": "play",
    "matatacon.buttonKeyMenu.delete": "delete",
    "matatacon.buttonKeyMenu.music": "music",
    "matatacon.buttonKeyMenu.forward": "forward",
    "matatacon.buttonKeyMenu.backward": "backward",
    "matatacon.buttonKeyMenu.left": "left",
    "matatacon.buttonKeyMenu.right": "right",
    "matatacon.colorChannelMenu.red": "red",
    "matatacon.colorChannelMenu.green": "green",
    "matatacon.colorChannelMenu.blue": "blue",
    "matatacon.axisValueMenu.x": "x-axis",
    "matatacon.axisValueMenu.y": "y-axis",
    "matatacon.axisValueMenu.z": "z-axis",
    "matatacon.ledRingIndexMenu.num1": "the 1st",
    "matatacon.ledRingIndexMenu.num2": "the 2nd",
    "matatacon.ledRingIndexMenu.num3": "the 3rd",
    "matatacon.ledRingIndexMenu.num4": "the 4th",
    "matatacon.ledRingIndexMenu.num5": "the 5th",
    "matatacon.ledRingIndexMenu.num6": "the 6th",
    "matatacon.ledRingIndexMenu.num7": "the 7th",
    "matatacon.ledRingIndexMenu.num8": "the 8th",
    "matatacon.ledRingIndexMenu.num9": "the 9th",
    "matatacon.ledRingIndexMenu.num10": "the 10th",
    "matatacon.ledRingIndexMenu.num11": "the 11th",
    "matatacon.ledRingIndexMenu.num12": "the 12th",
    "matatacon.ledRingIndexMenu.all": "all",
    "matatacon.brightnessLevelMenu.lev1": "1",
    "matatacon.brightnessLevelMenu.lev2": "2",
    "matatacon.brightnessLevelMenu.lev3": "3",
    "matatacon.brightnessLevelMenu.lev4": "4",
    "matatacon.brightnessLevelMenu.lev5": "5",
    "matatacon.brightnessLevelMenu.lev6": "6",
    "matatacon.brightnessLevelMenu.rollDice": "roll dice",
    "matatacon.messageIndexMenu.msg1": "1",
    "matatacon.messageIndexMenu.msg2": "2",
    "matatacon.messageIndexMenu.msg3": "3",
    "matatacon.messageIndexMenu.msg4": "4",
    "matatacon.messageIndexMenu.msg5": "5",
    "matatacon.messageIndexMenu.msg6": "6",
    "matatacon.messageIndexMenu.rollDice": "roll dice",
    "matatacon.lightRingLedSingleSet1": "set [LED_INDEX] LED to [COLOR_TYPE] and brightness is level [BRIGHTNESS_LEVEL]",
    "matatacon.lightRingLedSingleSet2": "set LED [LED_INDEX] to color [COLOR_VALUE]",
    "matatacon.lightRingLedSingleSet3": "set LED [LED_INDEX] red [RED_VALUE] green [GREEN_VALUE] blue [BLUE_VALUE]",
    "matatacon.lightRingLedSingleSet4": "set led lamp panel [PANEL]",
    "matatacon.lightRingShowEffect": "lamp ring show [LIGHT_EFFECT]",
    "matatacon.lightRingAllLedOff": "turn all LED off",
    "matatacon.sendIRMessage": "send message [MESSAGE_INDEX]",
    "matatacon.waitIRMessage": "wait message [MESSAGE_INDEX]",
    "matatacon.isButtonPressed": "[BUTTON_KEY] is pressed?",
    "matatacon.motionSensorStatus": "sensor occurs [MOTION_STATUS]",
    "matatacon.recognizeColor": "recognize color [COLOR_TYPE]",
    "matatacon.isHearSomething": "hear something?",
    "matatacon.isObstaclesAhead": "obstacles ahead?",
    "matatacon.isBrightness": "detect brightness?",
    "matatacon.getPitchAngle": "pitch angle",
    "matatacon.getRollAngle": "roll angle",
    "matatacon.getYawAngle": "yaw angle",
    "matatacon.getShakingStrength": "shaking strength",
    "matatacon.getAmbientLightIntensity": "ambient light intensity",
    "matatacon.getRGBColor": "[COLOR_CHANNEL] color value",
    "matatacon.getAcceleration": "[AXIS_VALUE] acceleration",
    "matatacon.whenButtonPressed": "when button [BUTTON_KEY] pressed",
    "matatacon.whenAttitudeChangeTo": "when attitude [MOTION_STATUS]",
    "matatacon.whenHearSomething": "when hear something"
}